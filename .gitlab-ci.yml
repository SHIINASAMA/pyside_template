stages:
  - build
  - upload
  - deploy

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/App/${CI_COMMIT_TAG}"

build:
  stage: build
  tags:
    - windows
  script:
    - pip install uv
    - uv sync
    - uv run build.py --all --onedir
    - mv ./build/App ./Package
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH) && ($CI_COMMIT_TAG == null)
      changes:
        - app/**
        - pyproject.toml
        - uv.lock
        - build.py
        - .gitlab-ci.yml
  artifacts:
    name: "build-${CI_COMMIT_SHA}"
    paths:
      - Package
    expire_in: 30 days

upload:
  stage: upload
  image: curlimages/curl:latest
  needs:
    - job: build
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - tar -czf Package.tar.gz Package/
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file Package.tar.gz ${PACKAGE_REGISTRY_URL}/Package.tar.gz'

release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: upload
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'true'
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: 'Auto Release by GitLab Pipeline.'
    assets:
      links:
        - name: 'Package'
          url: '${PACKAGE_REGISTRY_URL}/Package.tar.gz'
