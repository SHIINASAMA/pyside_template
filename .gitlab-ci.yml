stages:
  - validate
  - test
  - build
  - release

check_version:
  stage: validate
  image: reg.mikumikumi.xyz/mirror/bash:latest
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      bash -eo pipefail <<'EOF'
      if [[ ! "$CI_COMMIT_TAG" =~ ^([0-9]+(\.[0-9]+){1,3})(-(stable|alpha|beta|nightly|dev))?$ ]]; then
        echo "❌ Tag format invalid!"
        exit 1
      fi
      echo "✅ Tag format OK"
      EOF

.test:
  stage: test
  variables:
    REPORT_FILE: report-unit.xml
  rules:
    - changes:
      - app/**
      - tool/**
  script:
   - pip install uv
   - uv sync
   - uv run pyside-cli --rc
   - uv run pyside-cli --test -- -v --junitxml=${REPORT_FILE}
  artifacts:
    reports:
      junit: report-*.xml

.build:
  stage: build
  script:
    - pip install uv
    - uv sync
    - uv run pyside-cli --all --onedir
    - mv ./build/App ./Package
  rules:
    - if: $CI_COMMIT_TAG
  artifacts:
    name: "build-${CI_COMMIT_SHA}"
    paths:
      - ./release/App-*
    expire_in: 3 days

test_windows_x64:
  extends: .test
  variables:
    REPORT_FILE: report-window-x64.xml
  tags:
    - windows

test_linux_x64:
  extends: .test
  image: reg.mikumikumi.xyz/mirror/python:3.11.13
  variables:
    REPORT_FILE: report-linux-x64.xml

build_whl:
  stage: build
  image: reg.mikumikumi.xyz/mirror/python:3.11.13
  script:
    - pip install uv
    - uv sync
    - uv run pyside-cli --rc
    - uv build --no-sources
    - mkdir release
    - mv dist/*.whl release
  rules:
    - if: $CI_COMMIT_TAG
  artifacts:
    name: "build-${CI_COMMIT_SHA}"
    paths:
      - ./release/*.whl
    expire_in: 3 days

build_windows_x64:
  extends: .build
  tags:
    - windows
  after_script:
    - New-Item -Path release -Type Directory
    - Compress-Archive -Path .\Package\ -DestinationPath .\release\App-windows-x64.zip -CompressionLevel Optimal

build_linux_x64:
  extends: .build
  image: reg.mikumikumi.xyz/mirror/python:3.11.13
  before_script:
    - apt-get update
    - apt-get install -y patchelf
  after_script:
    - mkdir release
    - tar -czf ./release/App-linux-x64.tar.gz Package/

# bug: glab issues in private repositories
# https://gitlab.com/gitlab-org/cli/-/issues/7859
# https://gitlab.com/gitlab-org/gitlab/-/issues/568868
release:
  stage: release
  image: reg.mikumikumi.xyz/mirror/glab:latest
  needs:
    - job: build_whl
      artifacts: true
    - job: build_windows_x64
      artifacts: true
    - job: build_linux_x64
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - export GITLAB_HOST=$CI_SERVER_HOST
    - export GITLAB_TOKEN=$CI_JOB_TOKEN
    - glab auth login --job-token $CI_JOB_TOKEN --hostname $CI_SERVER_HOST --api-protocol $CI_SERVER_PROTOCOL
    - glab release create $CI_COMMIT_TAG --ref $CI_COMMIT_TAG -n "Release ${CI_COMMIT_TAG}" -F CHANGE.md ./release/*

