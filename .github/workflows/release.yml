on:
  push:
    branches:
      - main
    tags:
      # GitHub Actions does not support full regular expressions for tag matching.
      # Please set tag rules in the repository settings:
      # Settings -> Tags -> Go to rulesets to create a new tag rule
      # The pattern must be: ([0-9]+(\.[0-9]+){1,3})(-(stable|alpha|beta|nightly|dev))?$
      - "*"
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Tag: $TAG"
          if [[ ! "$TAG" =~ ^([0-9]+(\.[0-9]+){1,3})(-(stable|alpha|beta|nightly|dev))?$ ]]; then
            echo "❌ Tag does not match version pattern!"
            exit 1
          fi
          echo "✅ Tag format OK"

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64

    runs-on: ${{matrix.os}}
    needs: check-version
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: yezz123/setup-uv@v4

      - name: Before script
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf

      - name: Setup, install dependencies, build
        run: |
          uv sync
          uv run build.py --all --onedir

      - name: Package artifact (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mv ./build/App ./Package
          zip -r App-${{ matrix.os }}-${{ matrix.arch }}.zip Package/

      - name: Package artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Move-Item -Path ./build/App -Destination ./Package
          Compress-Archive -Path .\Package\ -DestinationPath App-${{ matrix.os }}-${{ matrix.arch }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: App-${{ matrix.os }}-${{ matrix.arch }}
          path: ./App-*

  release:
    runs-on: ubuntu-latest
    needs:
      build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v5
        with:
          path: ./release
          pattern: App-*
      - run: |
          ls -R release
      - uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: ./release/*.zip
          name: Release ${{ github.ref_name }}
          body_path: CHANGE.md
          prerelease: ${{ contains(github.ref_name, '-alpha') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-dev') || contains(github.ref_name, '-nightly') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
